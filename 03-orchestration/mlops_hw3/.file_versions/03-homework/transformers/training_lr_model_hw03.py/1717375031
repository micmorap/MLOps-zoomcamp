import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction import DictVectorizer
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

if 'transformer' not in globals():
    from mage_ai.data_preparation.decorators import transformer


def vectorizer_training_set(df: pd.DataFrame):
    
    X = df
    #data_dict = X.to_dict(orient='records')

    #dv = DictVectorizer(sparse=True)
    
    #X_train = dv.fit_transform(data_dict)
    #y_train = df['duration'].values

    print(X) #X_train, y_train

"""def train_model(X_train, y_train):

    model = LinearRegression()
    model_trained = model.fit(X_train, y_train)
    return model_trained """


@transformer
def transform(data, *args, **kwargs):
    """
    """
    # Specify your transformation logic here
    #X_train, y_train = 
    r =vectorizer_training_set(data)
    # final_lr_model =train_model(X_train, y_train)

    print(type(r)) # final_lr_model.intercept_


